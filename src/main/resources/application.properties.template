####################################
# environment configuration        #
####################################
spring.application.name=DEMIS Notification-Gateway

# only relevant for an embedded server, otherwise change the port in the server.xml(tomcat)
server.port=${GATEWAY_SERVER_PORT:9042}
server.servlet.context-path=${SERVLET_CONTEXT_PATH:/notification-gateway}
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
# Actuator configuration
management.endpoint.health.probes.enabled=true
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.tags.application=@project.name@
# Disable all the endpoints by default
management.endpoints.enabled-by-default=false
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
spring.sleuth.propagation.type=B3
# Enable Exposing of Information over /actuator/info
management.info.env.enabled=true
# Information for the /info Endpoint
info.app.name=@project.name@
info.app.version=@project.version@
# http timeouts
http.connection.timeout.ms=60000
http.connection.pool.timeout.ms=10000
http.socket.timeout.ms=30000
# locations-service
hospital-location-service.url=${HOSPITAL_LOCATION_SERVICE_URL:https://qs.demis.rki.de/services}
# fhir-ui-data-model-translation-service
fhir-data-translation-service.url=${FHIR_DATA_TRANSLATION_SERVICE_URL:https://qs.demis.rki.de/fhir-ui-data-model-translation}
# NES
####################################
notification.api.baseUrl=${NES_BASE_URL:https://qs.demis.rki.de/}
notification.api.resourcePath=${NES_LABORATORY_PATH:notification-api/fhir/}
hospitalization.path=${NES_HOSPITALIZATION_PATH:hospitalization/fhir/}
# RPS
####################################
rps.baseUrl=${RPS_BASE_URL:https://qs.demis.rki.de/}
rps.reports.path=${RPS_BEDOCCUPANCY_PATH:reports/fhir/}
# Token fetching and authentication
####################################
token.endpoint.lab-uri=${KEYCLOAK_TOKEN_LAB_URI:https://qs.demis.rki.de/auth/realms/LAB/protocol/openid-connect/token}
token.endpoint.hospital-uri=${KEYCLOAK_TOKEN_HOSPITAL_URI:https://qs.demis.rki.de/auth/realms/HOSPITAL/protocol/openid-connect/token}
# Define the list of allowed issuers:
idp.issuers=${IDP_ISSUERS:ibm,demis}
# IBM IDP Specific Configuration
idp.issuers.ibm.jwk-set-uri=${IDP_IBM_JWK_SET_URI:https://id.certify.demo.ubirch.com/auth/realms/gematik/protocol/openid-connect/certs}
idp.issuers.ibm.allowed-issuers=${IDP_IBM_ISSUERS:https://id.certify.demo.ubirch.com/auth/realms/gematik,https://id.ru.impfnachweis.info/auth/realms/gematik}
idp.issuers.ibm.jws-algorithm=${IDP_IBM_JWS_ALGORITHM:ES256}
idp.issuers.ibm.profession-oids=${IDP_IBM_PROFESSION_OIDs:1.2.276.0.76.4.53}
# DEMIS IDP Specific Configuration
idp.issuers.demis.jwk-set-uri=${IDP_DEMIS_JWK_SET_URI:https://qs.demis.rki.de/auth/realms/HOSPITAL/protocol/openid-connect/certs}
idp.issuers.demis.allowed-issuers=${IDP_DEMIS_ISSUERS:https://qs.demis.rki.de/auth/realms/HOSPITAL,https://qs.demis.rki.de/auth/realms/LAB}
idp.issuers.demis.jws-algorithm=${IDP_DEMIS_JWS_ALGORITHM:RS256}
idp.issuers.demis.tls-verify=${IDP_DEMIS_TLS_VERIFY:true}
idp.issuers.demis.federated-issuer=${FEDERATED_DEMIS_IDP_ISSUER:https://qs.demis.rki.de/auth/realms/PORTAL}
####################################
# component configuration          #
####################################
application.version=@project.version@
# Flag to enable/disable legacy features (e.g. Read files from Classpath instead from File)
application.legacy.mode=true
# Uses the local decoder without contacting Ubirch remotely
jwt.offline.decoder.enabled=false
# Security
############################################
# Token fetching and authentication
token.client.id=${TOKEN_CLIENT_ID:demis-gateway}
token.client.username=${TOKEN_CLIENT_USER:99999}
token.client.secret.lab=${TOKEN_CLIENT_LAB}
token.client.secret.hospital=${TOKEN_CLIENT_HOSPITAL}
token.lifetimeInMinutes=${TOKEN_EXPIRES_MINUTES:10}
truststore.file=${TRUSTSTORE_FILE:certs/nginx.truststore}
truststore.password=${TRUSTSTORE_PASSWORD:my-secret-to-set}
auth.cert.keystore=${AUTH_CERT_KEYSTORE:certs/DEMIS.p12}
auth.cert.password=${AUTH_CERT_PASSWORD:my-password-to-be-set}
auth.cert.alias=${AUTH_CERT_ALIAS:demis-99999}
# Testuser
testuser.token.client.username=${TEST_TOKEN_CLIENT_USER:test-int}
testuser.auth.cert.keystore=${TEST_AUTH_CERT_KEYSTORE:certs/Testuser.p12}
testuser.auth.cert.password=${TEST_AUTH_CERT_PASSWORD:my-keystore-password-to-be-set}
testuser.auth.cert.alias=${TEST_AUTH_CERT_ALIAS:demis-test-int}
# CORS configuration
allowed.origins=${ALLOWED_ORIGINS:http://localhost:4200,http://localhost:5555}
allowed.headers=${ALLOWED_HEADERS:app-key,x-real-ip,content-type,authorization}
# Logging
notification.api.enableRequestLogging=true

notification.headers.client.ip=${HEADER_CLIENT_IP:x-real-ip}
notification.gematik.ip=${GEMATIK_IP:62.23.239.123,34.89.219.171}

# lowercase comma separated list of request headers to mask
#logging.request-headers.exclusions=authorization

#portal configuration
config.notification-portal.production=${CONFIG_NOTIFICATION_PORTAL_PRODUCTION:false}
config.notification-portal.gateway-paths.laboratory=${CONFIG_NOTIFICATION_PORTAL_GATEWAY_PATHS_LABORATORY:/notification-gateway/api/ng/notification/laboratory}
config.notification-portal.gateway-paths.hospitalization=${CONFIG_NOTIFICATION_PORTAL_GATEWAY_PATHS_HOSPITALIZATION:/notification-gateway/api/ng/notification/hospitalization}
config.notification-portal.gateway-paths.bedOccupancy=${CONFIG_NOTIFICATION_PORTAL_GATEWAY_PATHS_BED_OCCUPANCY:/notification-gateway/api/ng/reports/bedOccupancy}
config.notification-portal.gateway-paths.hospitalLocations=${CONFIG_NOTIFICATION_PORTAL_GATEWAY_PATHS_HOSPITAL_LOCATIONS:/notification-gateway/api/ng/services/hospital-locations}
config.notification-portal.gateway-paths.pathogen=${CONFIG_NOTIFICATION_PORTAL_GATEWAY_PATHS_PATHOGEN:/notification-gateway/api/ng/notification/pathogen}
#demis identity provider
config.notification-portal.identity-providers[0].tenant=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_0_TENANT:demis}
config.notification-portal.identity-providers[0].base-url=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_0_BASE_URL:https://qs.demis.rki.de}
config.notification-portal.identity-providers[0].issuers[0]=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_0_ISSUERS_0:https://qs.demis.rki.de/auth/realms/HOSPITAL}
#ibm identity provider
config.notification-portal.identity-providers[1].tenant=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_1_TENANT:ibm}
config.notification-portal.identity-providers[1].base-url=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_1_BASE_URL:https://id.certify.demo.ubirch.com}
config.notification-portal.identity-providers[1].client-id=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_1_CLIENT_ID:smcb-auth-komfortclient-simulator}
config.notification-portal.identity-providers[1].issuers[0]=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_1_ISSUERS_0:https://id.certify.demo.ubirch.com/auth/realms/gematik}
#demis-portal identity provider
config.notification-portal.identity-providers[2].tenant=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_2_TENANT:demis}
config.notification-portal.identity-providers[2].base-url=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_2_BASE_URL:https://qs.demis.rki.de}
config.notification-portal.identity-providers[2].client-id=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_2_CLIENT_ID:meldeportal}
config.notification-portal.identity-providers[2].issuers[0]=${CONFIG_NOTIFICATION_PORTAL_IDENTITY_PROVIDERS_2_ISSUERS_0:https://qs.demis.rki.de/auth/realms/PORTAL}

# log settings, level 1 = debug
config.notification-portal.ngxloggerconfig.level=${CONFIG_NOTIFICATION_PORTAL_NGXLOGGERCONFIG_LEVEL:1}
config.notification-portal.ngxloggerconfig.disableConsoleLogging=${CONFIG_NOTIFICATION_PORTAL_NGXLOGGERCONFIG_DISABLECONSOLELOGGING:false}
#feature flags
config.notification-portal.feature-flags.ssoAuthEnabled=${CONFIG_NOTIFICATION_PORTAL_FEATURE_FLAGS_SSO_AUTH_ENABLED:false}
config.notification-portal.feature-flags.pathogenTileIsOn=${CONFIG_NOTIFICATION_PORTAL_FEATURE_FLAGS_PATHOGEN_TILE_IS_ON:false}
config.notification-portal.feature-flags.tokenInjectionEnabled=${CONFIG_NOTIFICATION_PORTAL_FEATURE_FLAGS_TOKEN_INJECTION_ENABLED:false}
# CSRF ACTIVATION
activate.csrf=${ACTIVATE_CSRF:false}

# header versions
header.bed.occupancy.version=${HEADER_BED_OCCUPANCY_VERSION:1.23.0}
header.bed.occupancy.profile=${HEADER_BED_OCCUPANCY_PROFILE:rki.demis.r4.core}
header.laboratory.notification.version=${HEADER_LABORATORY_NOTIFICATION_VERSION:1.23.0}
header.laboratory.notification.profile=${HEADER_LABORATORY_NOTIFICATION_PROFILE:rki.demis.r4.core}
header.disease.notification.version=${HEADER_DISEASE_NOTIFICATION_VERSION:1.23.0}
header.disease.notification.profile=${HEADER_BED_OCCUPANCY_PROFILE:rki.demis.r4.core}
