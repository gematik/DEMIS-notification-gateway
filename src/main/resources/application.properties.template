# Import Base Configuration
spring.config.import=classpath:/base-config-application.yaml
# Set Base Properties
base.errorhandler.enabled=false
base.feign.extension.enabled=false
base.logging.request.enabled=true
base.meter.aspect.enabled=false
# Actuator Configuration
management.observations.key-values.application=@project.name@
# Information for the /info Endpoint
info.app.name=@project.name@
info.app.version=@project.version@
# Enable Spring Virtual Threads
spring.threads.virtual.enabled=true
spring.jackson.default-property-inclusion = NON_NULL
# http timeouts
http.connection.timeout.ms=60000
http.connection.pool.timeout.ms=10000
http.socket.timeout.ms=30000
# fhir-ui-data-model-translation-service cluster interal route
fhir-data-translation-service.url=${FHIR_DATA_TRANSLATION_SERVICE_URL:http://futs.demis.svc.cluster.local/fhir-ui-data-model-translation}
# NES
####################################
notification.api.baseUrl=${NES_BASE_URL:http://notification-processing-service:8080/}
notification.api.resourcePath=${NES_LABORATORY_PATH:notification-api/fhir/}
hospitalization.path=${NES_HOSPITALIZATION_PATH:hospitalization/fhir/}
# RPS
####################################
rps.baseUrl=${RPS_BASE_URL:http://report-processing-service:8080/}
rps.reports.path=${RPS_BEDOCCUPANCY_PATH:reports/fhir/}
# Token fetching and authentication
####################################
pathogen.authentication.required=${PATHOGEN_AUTHENTICATION_REQUIRED:true}
token.endpoint.lab-uri=${KEYCLOAK_TOKEN_LAB_URI:https://qs.demis.rki.de/auth/realms/LAB/protocol/openid-connect/token}
###############################
# component configuration          #
####################################
application.version=@project.version@
# Security
############################################
# Token fetching and authentication
token.client.id=${TOKEN_CLIENT_ID:demis-gateway}
token.client.username=${TOKEN_CLIENT_USER:99999}
token.client.secret.lab=${TOKEN_CLIENT_LAB}
truststore.file=${TRUSTSTORE_FILE:certs/nginx.truststore}
truststore.password=${TRUSTSTORE_PASSWORD}
auth.cert.keystore=${AUTH_CERT_KEYSTORE:certs/DEMIS.p12}
auth.cert.password=${AUTH_CERT_PASSWORD}
auth.cert.alias=${AUTH_CERT_ALIAS:demis-99999}
# Testuser
testuser.token.client.username=${TEST_TOKEN_CLIENT_USER:test-int}
testuser.auth.cert.keystore=${TEST_AUTH_CERT_KEYSTORE:certs/Testuser.p12}
testuser.auth.cert.password=${TEST_AUTH_CERT_PASSWORD}
testuser.auth.cert.alias=${TEST_AUTH_CERT_ALIAS:demis-test-int}
# Logging
notification.api.enableRequestLogging=true

notification.headers.client.ip=${HEADER_CLIENT_IP:x-real-ip}
notification.gematik.ip=${GEMATIK_IP:}

# lowercase comma separated list of request headers to mask
#logging.request-headers.exclusions=authorization

# header versions
header.bed.occupancy.version=${HEADER_BED_OCCUPANCY_VERSION:1.24.0}
header.bed.occupancy.profile=${HEADER_BED_OCCUPANCY_PROFILE:rki.demis.r4.core}
header.laboratory.notification.version=${HEADER_LABORATORY_NOTIFICATION_VERSION:1.24.0}
header.laboratory.notification.profile=${HEADER_LABORATORY_NOTIFICATION_PROFILE:rki.demis.r4.core}
header.disease.notification.version=${HEADER_DISEASE_NOTIFICATION_VERSION:1.2.0-rc.5}
header.disease.notification.profile=${HEADER_BED_OCCUPANCY_PROFILE:rki.demis.r4.core}

############################################
# Feature Flags
############################################
feature.flag.specimen.preparation.enabled=${FEATURE_FLAG_SPECIMEN_PREPARATION_ENABLED:false}
feature.flag.new_notified_person_enabled=${FEATURE_FLAG_NEW_NOTIFIED_PERSON_ENABLED:false}
feature.flag.multiple_specimen_enabled=${FEATURE_FLAG_MULTIPLE_SPECIMEN_ENABLED:false}
feature.flag.disease_address_patient=${FEATURE_FLAG_DISEASE_ADDRESS_PATIENT:false}
